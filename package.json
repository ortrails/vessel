{
  "name": "vessel",
  "version": "0.0.0",
  "license": "MIT",
  "scripts": {
    "ng": "ng",
    "start": "npm run postinstall.web && ng serve web-vessel",
    "build": "npm run postinstall.web && ng build web-vessel",
    "test": "npm run postinstall.web && ng test",
    "lint": "nx lint && ng lint",
    "e2e": "npm run postinstall.web && ng e2e",
    "affected:apps": "nx affected:apps",
    "affected:libs": "nx affected:libs",
    "affected:build": "nx affected:build",
    "affected:e2e": "nx affected:e2e",
    "affected:test": "nx affected:test",
    "affected:lint": "nx affected:lint",
    "affected:dep-graph": "nx affected:dep-graph",
    "affected": "nx affected",
    "format": "nx format:write",
    "format:write": "nx format:write",
    "format:check": "nx format:check",
    "update": "ng update @nrwl/workspace",
    "update:check": "ng update",
    "workspace-schematic": "nx workspace-schematic",
    "dep-graph": "nx dep-graph",
    "help": "nx help",
    "clean.shared": "cd libs/ && git clean -dfX && cd ../xplat/ && git clean -dfX",
    "clean": "npx rimraf -- hooks node_modules package-lock.json && npm i",
    "start.web.vessel": "npm run postinstall.web && ng serve web-vessel",
    "start.nativescript.vessel.ios": "cd apps/nativescript-vessel && tns run ios --emulator --bundle",
    "start.nativescript.vessel.android": "cd apps/nativescript-vessel && tns run android --emulator --bundle",
    "start.nativescript.vessel.preview": "cd apps/nativescript-vessel && tns preview --bundle",
    "clean.nativescript.vessel": "cd apps/nativescript-vessel && npx rimraf -- hooks node_modules platforms package-lock.json && npm i && npx rimraf -- package-lock.json",
    "postinstall": "electron-rebuild install-app-deps",
    "postinstall.electron": "node tools/electron/postinstall",
    "postinstall.web": "node tools/web/postinstall",
    "build.electron.vessel": "npm run prepare.electron.vessel && ng build electron-vessel --prod --base-href ./",
    "build.electron.vessel.local": "npm run build.electron.vessel && electron dist/apps/electron-vessel",
    "build.electron.vessel.linux": "npm run build.electron.vessel && cd dist/apps/electron-vessel && npx electron-builder build --linux",
    "build.electron.vessel.windows": "npm run build.electron.vessel && cd dist/apps/electron-vessel && npx electron-builder build --windows",
    "build.electron.vessel.mac": "npm run build.electron.vessel && cd dist/apps/electron-vessel && npx electron-builder build --mac",
    "prepare.electron.vessel": "npm run postinstall.electron && tsc -p apps/electron-vessel/tsconfig.json",
    "serve.electron.vessel.target": "ng serve electron-vessel",
    "serve.electron.vessel": "wait-on http-get://localhost:4200/ && electron apps/electron-vessel/src --serve",
    "start.electron.vessel": "npm run prepare.electron.vessel && npm-run-all -p serve.electron.vessel.target serve.electron.vessel",
    "serve.nest.vessel": "ts-node -P apps/nest-vessel/tsconfig.json apps/nest-vessel/src/main.ts",
    "start.nest.vessel": "npm-run-all -p serve.nest.vessel",
    "build.nest.vessel": "tsc -p apps/nest-vessel/tsconfig.json",
    "test.nest.vessel": "jest --config=apps/nest-vessel/jest.json",
    "test.nest.vessel.coverage": "jest --config=apps/nest-vessel/jest.json --coverage --coverageDirectory=coverage",
    "test.nest.vessel.watch": "jest --config=apps/nest-vessel/jest.json --watch",
    "test.nest.vessel.e2e": "jest --config=apps/nest-vessel/e2e/jest-e2e.json --forceExit",
    "test.nest.vessel.e2e.watch": "jest --config=apps/nest-vessel/e2e/jest-e2e.json --watch"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "^8.0.0",
    "@angular/common": "^8.0.0",
    "@angular/compiler": "^8.0.0",
    "@angular/core": "^11.0.5",
    "@angular/forms": "^8.0.0",
    "@angular/http": "^7.2.15",
    "@angular/platform-browser": "^8.0.0",
    "@angular/platform-browser-dynamic": "^8.0.0",
    "@angular/router": "^8.0.0",
    "@nestjs/common": "^5.3.0",
    "@nestjs/core": "^5.3.0",
    "@nestjs/microservices": "^5.5.0",
    "@nestjs/testing": "^5.3.0",
    "@nestjs/typeorm": "^5.2.2",
    "@nestjs/websockets": "^5.5.0",
    "@ngrx/effects": "^8.0.0",
    "@ngrx/router-store": "^8.0.0",
    "@ngrx/store": "^8.0.0",
    "@ngx-translate/core": "~11.0.0",
    "@ngx-translate/http-loader": "~4.0.0",
    "@nrwl/nx": "^7.0.0",
    "@nrwl/schematics": "^8.2.0",
    "@vessel/scss": "file:libs/scss",
    "@vessel/web": "file:xplat/web",
    "cache-manager": "^2.9.0",
    "compression": "^1.7.3",
    "core-js": "^2.5.4",
    "csurf": "^1.9.0",
    "dotenv": "^6.2.0",
    "express-rate-limit": "^3.3.2",
    "helmet": "^3.15.0",
    "nativescript-angular": "~7.2.0",
    "nativescript-ngx-fonticon": "^4.2.0",
    "nativescript-theme-core": "^1.0.4",
    "reflect-metadata": "^0.1.12",
    "rxjs": "~6.4.0",
    "tns-core-modules": "~5.2.0",
    "typeorm": "^0.2.9",
    "zone.js": "^0.9.1"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^0.800.0",
    "@angular/cli": "8.0.0",
    "@angular/compiler-cli": "^8.0.0",
    "@angular/language-service": "^8.0.0",
    "@nrwl/cypress": "8.2.0",
    "@nrwl/jest": "8.2.0",
    "@nrwl/workspace": "8.2.0",
    "@nstudio/schematics": "^7.4.8",
    "@types/jasmine": "^3.3.13",
    "@types/jest": "^20.0.8",
    "@types/node": "^9.3.0",
    "codelyzer": "~5.0.1",
    "cypress": "~3.3.1",
    "dotenv": "6.2.0",
    "electron": "^4.0.5",
    "electron-builder": "^20.38.4",
    "electron-installer-dmg": "~2.0.0",
    "electron-packager": "~13.1.0",
    "electron-rebuild": "~1.8.4",
    "electron-reload": "~1.4.0",
    "electron-store": "~2.0.0",
    "electron-updater": "~4.0.6",
    "jest": "^20.0.4",
    "jest-preset-angular": "7.0.0",
    "npm-run-all": "^4.1.5",
    "npx": "10.2.0",
    "prettier": "1.16.4",
    "supertest": "^3.0.0",
    "tns-platform-declarations": "~5.2.0",
    "ts-jest": "^20.0.14",
    "ts-loader": "^4.0.0",
    "ts-node": "^7.0.0",
    "tslint": "~5.11.0",
    "typescript": "~3.4.5",
    "wait-on": "~3.2.0",
    "webpack": "^4.35.3"
  },
  "xplat": {
    "prefix": "vessel"
  }
}
